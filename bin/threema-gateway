#!/usr/bin/env php
<?php
/**
 * @author    Threema GmbH
 * @copyright Copyright (c) 2015, Threema GmbH
 */

use Symfony\Component\Console\Application;
use Threema\MsgApi\ConnectionFactory;
use Threema\MsgApi\Encryptor\AbstractEncryptor;

$autoloaderInWorkingDirectory = getcwd() . '/vendor/autoload.php';
if (is_file($autoloaderInWorkingDirectory)) {
    require_once $autoloaderInWorkingDirectory;
}

if (!class_exists(AbstractEncryptor::class, true)) {
    $composerAutoloadFile = __DIR__ . '/../vendor/autoload.php';
    if (!is_file($composerAutoloadFile)) {
        $composerAutoloadFile = __DIR__ . '/../../../autoload.php';
    }
    require_once $composerAutoloadFile;
}

$connectionFactory = new ConnectionFactory();

// https://gist.github.com/sroze/3e8d45d0cdc301debfd2
$application = new Application('Threema Gateway');

// dynamically load the commands
$base        = \Threema\Console\Symfony\AbstractLocalCommand::class;
$reflection  = new ReflectionClass($base);
foreach (new DirectoryIterator(dirname($reflection->getFileName())) as $fileInfo) {
    if ($fileInfo->isDot()) {
        continue;
    }
    if (strpos($fileInfo->getFilename(), 'Abstract') !== false) {
        continue;
    }
    if (strpos($fileInfo->getFilename(), 'Command.php') === false) {
        continue;
    }
    $className = '\\' . $reflection->getNamespaceName() . '\\' . $fileInfo->getBasename('.php');
    $application->add(new $className($connectionFactory));
}

$application->run();
